<%- include('../layouts/adminLayout/header.ejs')%>

<style>
  /* General Styles */
  body {
    font-family: 'Arial', sans-serif;
    background-color: #f8f9fa;
    color: #343a40;
  }

  .container-xxl {
    padding: 0;
  }



  .card {
    border-radius: 10px;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
    margin: 20px 0;
  }

  .card-tale {
    background-color: #4e73df;
    color: #fff;
  }

  .card-dark-blue {
    background-color: #1cc88a;
    color: #fff;
  }

  .card-light-blue {
    background-color: #36b9cc;
    color: #fff;
  }

  .card-light-danger {
    background-color: #f6c23e;
    color: #fff;
  }

  .table {
    margin-top: 20px;
  }

  .table thead {
    background-color: #5da0e2;
    color: #fff;
  }

  .table .text-center {
    text-align: center;
  }

  /* Custom button styles */
  .custom-size {
    padding: 5px 15px;
    font-size: 0.875rem;
  }
</style>


<div class="container-xxl position-relative bg-white d-flex p-0">
  <!-- Spinner Start -->
  <div id="spinner" class="show bg-white position-fixed translate-middle w-100 vh-100 top-50 start-50 d-flex align-items-center justify-content-center">
    <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
      <span class="sr-only">Loading...</span>
    </div>
  </div>
  <!-- Spinner End -->


  <!-- Sidebar Start -->
  <div class="sidebar pe-4 pb-3">
    <nav class="navbar bg-light navbar-light">
      <a href="index.html" class="navbar-brand mx-4 mb-3">
        <h3 class="text-primary"><i class="fa fa-hashtag me-2"></i>DASHMIN</h3>
      </a>
      <div class="d-flex align-items-center ms-4 mb-4">
        <div class="position-relative">
          <img class="rounded-circle" src="/admin/img/user.jpg" alt="" style="width: 40px; height: 40px;">
          <div class="bg-success rounded-circle border border-2 border-white position-absolute end-0 bottom-0 p-1"></div>
        </div>
        <div class="ms-3">
          <h6 class="mb-0">Khaiz</h6>
          <span>Admin</span>
        </div>
      </div>
      <div class="navbar-nav w-100">
        <div class="navbar-nav w-100">
          <a href="index.html" class="nav-item nav-link active"><i class="fa fa-tachometer-alt me-2"></i>Dashboard</a>
          <a href="userManagement" class="nav-item nav-link"><i class="fa fa-user me-2"></i>Manage User</a>
          <a href="category" class="nav-item nav-link"><i class="fa fa-th me-2"></i>Manage Category</a>
          <a href="product" class="nav-item nav-link"><i class="fa fa-keyboard me-2"></i>Manage Products</a>
          <a href="orderManagement" class="nav-item nav-link "><i class="fa fa-table me-2"></i>Manage Orders</a>
          <a href="couponManagement" class="nav-item nav-link "><i class="fa-solid fa-ticket"></i>Manage Coupon</a>
          <a href="offerManagement" class="nav-link "><i class="fa-solid fa-certificate"></i>Manage Offer</a>
        </div>
      </div>
    </nav>
  </div>
  <!-- Sidebar End -->


  <!-- Content Start -->
  <div class="content">
    <!-- Navbar Start -->
    <nav class="navbar navbar-expand bg-light navbar-light sticky-top px-4 py-0">
      <a href="index.html" class="navbar-brand d-flex d-lg-none me-4">
        <h2 class="text-primary mb-0"><i class="fa fa-hashtag"></i></h2>
      </a>
      <a href="#" class="sidebar-toggler flex-shrink-0">
        <i class="fa fa-bars"></i>
      </a>
      <form class="d-none d-md-flex ms-4">
        <input class="form-control border-0" type="search" placeholder="Search">
      </form>
      <div class="navbar-nav align-items-center ms-auto">

        <div class="nav-item dropdown">
          <a href="#" class="nav-link dropdown-toggle" data-bs-toggle="dropdown">
            <img class="rounded-circle me-lg-2" src="img/user.jpg" alt="" style="width: 40px; height: 40px;">
            <span class="d-none d-lg-inline-flex">Khaiz</span>
          </a>
          <div class="dropdown-menu dropdown-menu-end bg-light border-0 rounded-0 rounded-bottom m-0">
            <a href="#" class="dropdown-item">My Profile</a>
            <a href="#" class="dropdown-item">Settings</a>
            <a href="/admin/logout" class="dropdown-item">Log Out</a>
          </div>
        </div>
      </div>
    </nav>
    <!-- Navbar End -->


    <!-- Sale & Revenue Start -->
    <div class="main-panel">
      <div class="content-wrapper">
        <div class="row">
          <div class="col-md-12 grid-margin">
            <div class="row">
              <div class="col-12 col-xl-8 mb-4 mb-xl-0">

                <h6 class="font-weight-normal mb-0">All systems are running smoothly!</h6>
              </div>

            </div>
          </div>
        </div>

        <div class="row">

          <div class="col-md-12 grid-margin transparent">
            <div class="row">
              <div class="col-md-6 mb-4 stretch-card transparent">
                <div class="card card-tale">
                  <div class="card-body">
                    <p class="mb-4">USERS</p>
                    <p class="fs-30 mb-2"><%= userCount %></p>
                    <p></p>
                  </div>
                </div>
              </div>
              <div class="col-md-6 mb-4 stretch-card transparent">
                <div class="card card-dark-blue">
                  <div class="card-body">
                    <p class="mb-4">PRODUCTS</p>
                    <p class="fs-30 mb-2"><%= productCount %></p>
                    <p></p>
                  </div>
                </div>
              </div>
            </div>
            <div class="row">
              <div class="col-md-6 mb-4 mb-lg-0 stretch-card transparent">
                <div class="card card-light-blue">
                  <div class="card-body">
                    <p class="mb-4">Number of Orders</p>
                    <p class="fs-30 mb-2"><%= orderCount %></p>
                    <p></p>
                  </div>
                </div>
              </div>
              <div class="col-md-6 stretch-card transparent">
                <div class="card card-light-danger">
                  <div class="card-body">
                    <p class="mb-4">Total Sales</p>
                    <p class="fs-30 mb-2">â‚¹ <%= totalSales %></p>
                    <p></p>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <!-- Additional Charts -->
          <div class="container-fluid pt-4 px-4">
            <div class="row g-4">
              <div class="col-sm-12 col-xl-6">
                <div class="bg-light text-center rounded p-4">
                  <div class="d-flex align-items-center justify-content-between mb-4">
                    <h6 class="mb-0">Best Selling Categories</h6>
                    <div class="dropdown">
                      <button class="btn btn-secondary dropdown-toggle" type="button" id="categoryChartFilter" data-bs-toggle="dropdown" aria-expanded="false">
                        Filter
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="categoryChartFilter">
                        <li><button class="dropdown-item" type="button" data-chart="category" data-filter="weekly">Weekly</button></li>
                        <li><button class="dropdown-item" type="button" data-chart="category" data-filter="monthly">Monthly</button></li>
                        <li><button class="dropdown-item" type="button" data-chart="category" data-filter="yearly">Yearly</button></li>
                      </ul>
                    </div>
                  </div>
                  <canvas id="best-selling-categories"></canvas>
                </div>
              </div>
              <div class="col-sm-12 col-xl-6">
                <div class="bg-light text-center rounded p-4">
                  <div class="d-flex align-items-center justify-content-between mb-4">
                    <h6 class="mb-0">Best Selling Products</h6>
                    <div class="dropdown">
                      <button class="btn btn-secondary dropdown-toggle" type="button" id="productChartFilter" data-bs-toggle="dropdown" aria-expanded="false">
                        Filter
                      </button>
                      <ul class="dropdown-menu" aria-labelledby="productChartFilter">
                        <li><button class="dropdown-item" type="button" data-chart="product" data-filter="weekly">Weekly</button></li>
                        <li><button class="dropdown-item" type="button" data-chart="product" data-filter="monthly">Monthly</button></li>
                        <li><button class="dropdown-item" type="button" data-chart="product" data-filter="yearly">Yearly</button></li>
                      </ul>
                    </div>
                  </div>
                  <canvas id="best-selling-products"></canvas>
                </div>
              </div>
            </div>
          </div>

          <!-- Top Selling Section -->

          <div class="col-md-12 grid-margin">
            <div class="card">
              <div class="card-header">
                <div class="row">
                  <div class="col-6">
                    <h5>TOP SELLING</h5>
                  </div>
                  <div class="col-6 text-right">
                    <div class="btn-group" role="group">
                      <button type="button" class="btn btn-secondary custom-size" onclick="showTable('category')">Category</button>
                      <button type="button" class="btn btn-dark custom-size" onclick="showTable('product')">Product</button>
                      <button type="button" class="btn btn-secondary custom-size" onclick="showTable('brand')">Brand</button>
                    </div>
                  </div>
                </div>
              </div>

              <!-- Tables -->
              <% if(topCategories.length > 0){ %>
              <% let i = 1 %>
              <table class="table mt-50" id="categoryTable">
                <thead class="thead-dark">
                  <tr>
                    <th scope="col">SL</th>
                    <th scope="col">CATEGORY NAME</th>
                    <th scope="col">COUNT</th>
                  </tr>
                </thead>
                <tbody>
                  <% topCategories.forEach(item => { %>
                  <tr>
                    <th scope="row"><%= i %></th>
                    <td><%= item._id %></td>
                    <td><%= item.count %></td>
                  </tr>
                  <% i++ %>
                  <% }) %>
                </tbody>
              </table>
              <% } %>

              <% if(topProduct.length > 0){ %>
              <% let j = 1 %>
              <table class="table mt-50" id="productTable" style="display: none;">
                <thead class="thead-dark">
                  <tr>
                    <th scope="col">SL</th>
                    <th scope="col">PRODUCT NAME</th>
                    <th scope="col">COUNT</th>
                  </tr>
                </thead>
                <tbody>
                  <% topProduct.forEach(item => { %>
                  <tr>
                    <th scope="row"><%= j %></th>
                    <td><%= item._id %></td>
                    <td><%= item.count %></td>
                  </tr>
                  <% j++ %>
                  <% }) %>
                </tbody>
              </table>
              <% } %>

              <% if(topBrand.length > 0){ %>
              <% let k = 1 %>
              <table class="table mt-50" id="brandTable" style="display: none;">
                <thead class="thead-dark">
                  <tr>
                    <th scope="col">SL</th>
                    <th scope="col">BRAND NAME</th>
                    <th scope="col">COUNT</th>
                  </tr>
                </thead>
                <tbody>
                  <% topBrand.forEach(item => { %>
                  <tr>
                    <th scope="row"><%= k %></th>
                    <td><%= item._id %></td>
                    <td><%= item.count %></td>
                  </tr>
                  <% k++ %>
                  <% }) %>
                </tbody>
              </table>
              <% } %>
            </div>
          </div>
        </div>
      </div>
    </div>
    <!-- Sale & Revenue End -->


    <!-- Sales Chart Start -->

    <!-- Sales Chart End -->
    <div class="container-fluid pt-4 px-4">

    </div>
    <!--  -->

    <div class="container-fluid pt-4 px-4">
      <div class="bg-light text-center rounded p-4">

        <!-- Custom -->
        <div class="d-flex justify-content-between">
          <h3 class="text-danger" style="font-weight: bold;">SALES REPORT</h3>
          <div>
            <button class="btn btn-info dropdown-toggle custom-size" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
              Filter
            </button>
            <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
              <li><a class="dropdown-item" href="#" data-target="Daily" data-interval="daily">Daily</a></li>
              <li><a class="dropdown-item" href="#" data-target="Weekly" data-interval="weekly">Weekly</a></li>
              <li><a class="dropdown-item" href="#" data-target="Yearly" data-interval="yearly">Yearly</a></li>
            </ul>
            <button type="button" class="btn btn-secondary custom-size" data-bs-toggle="modal" data-bs-target="#basicModal">Custom</button>
            <!-- Modal -->
            <div class="modal fade" id="basicModal" tabindex="-1" aria-labelledby="basicModal" aria-hidden="true">
              <div class="modal-dialog">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title">Select Custom Date</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                  </div>
                  <div class="modal-body">
                    <form id="custom-date-form">
                      <div class="row">
                        <div class="col-md-6">
                          <input type="date" class="form-control" id="start-date" required>
                        </div>
                        <div class="col-md-6">
                          <input type="date" class="form-control" id="end-date" required>
                        </div>
                      </div>
                      <div class="mt-3">
                        <button type="submit" class="btn btn-info custom-size">Search</button>
                      </div>
                    </form>
                    <div id="error-message" class="alert alert-danger mt-3" style="display:none;"></div>
                  </div>
                </div>
              </div>
            </div>
            <!-- Modal -->
            <button type="button" class="btn btn-outline-danger custom-size" id="downloadPdfBtn" onclick="downloadPDF('salesReport')"><i class="fa-solid fa-file-pdf"></i></button>
            <button type="button" class="btn btn-outline-success custom-size" id="excelDownloadBtn" onclick="downloadExcel()"><i class="fa-solid fa-file-excel"></i></button>
          </div>
        </div>
        <!-- Custom -->
        <br>
        <div class="table-responsive" id="salesReport">
          <% if (salesReport && salesReport.length > 0) { %>
          <table class="table text-start align-middle table-bordered table-hover mb-0">
            <thead>
              <tr class="text-dark">
                <th scope="col">Order Id</th>
                <th scope="col">Order Date</th>
                <th scope="col">User Name</th>
                <th scope="col">Product Name</th>
                <th scope="col">Price</th>
                <th scope="col">Coupon Discount</th>
                <th scope="col">Offer Discount</th>
                <th scope="col">Final Price</th>
                <th scope="col">Order Status</th>
              </tr>
            </thead>
            <tbody>
              <% let totalAmount = 0; let totalDiscount = 0; %>
              <% for (let i = 0; i < salesReport.length; i++) { 
                totalAmount += salesReport[i].totalAmount;
                let couponDiscount = salesReport[i].couponDiscount || 0;
                let offerDiscount = salesReport[i].offerDiscount || 0;
                totalDiscount += (couponDiscount + offerDiscount);
            %>
              <tr>
                <td><%= salesReport[i].orderID %></td>
                <td><%= new Date(salesReport[i].orderDate).toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric', year: 'numeric' }) %></td>
                <td><%= salesReport[i].address.Name %></td>
                <td>
                  <% for (let j = 0; j < salesReport[i].orderItems.length; j++) { %>
                  <p><%= salesReport[i].orderItems[j].productName %></p>
                  <% } %>
                </td>
                <td>â‚¹<%= (salesReport[i].totalAmount+offerDiscount+couponDiscount) - 60 %></td>
                <td>â‚¹<%= couponDiscount %></td>
                <td>â‚¹<%= offerDiscount %></td>
                <% let price =salesReport[i].totalAmount %>
                <td>â‚¹<%= Math.floor(price) %></td>
                <td><%= salesReport[i].orderStatus %></td>
              </tr>
              <% } %>
            </tbody>
            <tfoot>
              <tr class="text-dark">
                <th colspan="4">Overall Total</th>
                <th>â‚¹<%= totalAmount %></th>
                <th>â‚¹<%= totalDiscount %></th>
                <th colspan="2">â‚¹<%= totalAmount - totalDiscount %></th>
              </tr>
            </tfoot>
          </table>
          <% } else { %>
          <h3>No data found</h3>
          <% } %>
        </div>


        <!-- Footer Start -->
        <div class="container-fluid pt-4 px-4">
          <div class="bg-light rounded-top p-4">
            <div class="row">


            </div>
          </div>
        </div>
        <!-- Footer End -->
      </div>
      <!-- Content End -->

      <!-- Back to Top -->
      <a href="#" class="btn btn-lg btn-primary btn-lg-square back-to-top"><i class="bi bi-arrow-up"></i></a>
    </div>

    <!-- JavaScript Libraries -->
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="lib/chart/chart.min.js"></script>
    <script src="lib/easing/easing.min.js"></script>
    <script src="lib/waypoints/waypoints.min.js"></script>
    <script src="lib/owlcarousel/owl.carousel.min.js"></script>
    <script src="lib/tempusdominus/js/moment.min.js"></script>
    <script src="lib/tempusdominus/js/moment-timezone.min.js"></script>
    <script src="lib/tempusdominus/js/tempusdominus-bootstrap-4.min.js"></script>


    <!-- Template Javascript -->
    <script src="js/main.js"></script>
    <!-- CDN for Pdf download -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.3.2/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.4.0/jspdf.umd.min.js"></script>
    <!-- CDN for Pdf download -->


    <script>
      $(document).ready(function() {
        // Dropdown item click handler
        $('.dropdown-item').click(function(e) {
          e.preventDefault();
          var selectedText = $(this).attr('data-target');
          $('#dropdownMenuButton').text(selectedText);
          $('#dropdownMenuButton').dropdown('toggle');
          const interval = $(this).attr('data-interval');
          fetchSalesData(interval);
        });

        // Custom date form submission handler
        $('#custom-date-form').submit(function(event) {
          event.preventDefault();
          if (!validDate()) {
            return;
          }
          const startDate = $('#start-date').val();
          const endDate = $('#end-date').val();
          fetchSalesDataByDate(startDate, endDate);
        });
      });

      function fetchSalesData(interval) {
        fetch(`/admin/salesReport?interval=${interval}`)
          .then(response => response.json())
          .then(data => {
            updateSalesTable(data.salesReport);
          })
          .catch(error => console.error('Error:', error));
      }

      function fetchSalesDataByDate(startDate, endDate) {
        fetch(`/admin/salesReport?startDate=${startDate}&endDate=${endDate}`)
          .then(response => response.json())
          .then(data => {
            updateSalesTable(data.salesReport);
          })
          .catch(error => console.error('Error:', error));
      }

      function updateSalesTable(salesReport) {
        const tableBody = $('#salesReport tbody');
        tableBody.empty();

        let totalAmount = 0;
        let totalDiscount = 0;

        salesReport.forEach(report => {
          const couponDiscount = report.couponDiscount || 0;
          const offerDiscount = report.offerDiscount || 0;
          const finalPrice = Math.floor(report.totalAmount - couponDiscount - offerDiscount);

          totalAmount += report.totalAmount;
          totalDiscount += (couponDiscount + offerDiscount);

          const row = `
                    <tr>
                        <td>${report.orderID}</td>
                        <td>${new Date(report.orderDate).toLocaleDateString('en-US', { weekday: 'short', month: 'short', day: 'numeric', year: 'numeric' })}</td>
                        <td>${report.address.Name}</td>
                        <td>${report.orderItems.map(item => `<p>${item.productName}</p>`).join('')}</td>
                        <td>â‚¹${report.totalAmount}</td>
                        <td>â‚¹${couponDiscount}</td>
                        <td>â‚¹${offerDiscount}</td>
                        <td>â‚¹${finalPrice}</td>
                        <td>${report.orderStatus}</td>
                    </tr>
                `;

          tableBody.append(row);
        });

        const tfoot = `
                <tr class="text-dark">
                    <th colspan="4">Overall Total</th>
                    <th>â‚¹${totalAmount}</th>
                    <th>â‚¹${totalDiscount}</th>
                    <th colspan="2">â‚¹${Math.floor(totalAmount - totalDiscount)}</th> 
                </tr>
            `;

        $('#salesReport tfoot').html(tfoot);
      }

      function validDate() {
        const startDate = $('#start-date').val();
        const endDate = $('#end-date').val();

        if (!startDate || !endDate) {
          $('#error-message').text('Both start date and end date are required.').show();
          return false;
        }

        if (new Date(startDate) > new Date(endDate)) {
          $('#error-message').text('Start date cannot be later than end date.').show();
          return false;
        }

        $('#error-message').hide();
        return true;
      }


      function downloadPDF() {
        const { jsPDF } = window.jspdf;
        const element = document.getElementById('salesReport');

        html2canvas(element, {
          scale: 2,
          logging: true,
          scrollX: 0,
          scrollY: -window.scrollY
        }).then(canvas => {
          const imgData = canvas.toDataURL('image/png');
          const pdf = new jsPDF({
            orientation: 'portrait',
            unit: 'mm',
            format: 'a4'
          });

          const pdfWidth = pdf.internal.pageSize.getWidth();
          const pdfHeight = pdf.internal.pageSize.getHeight();

          const imgProps = pdf.getImageProperties(imgData);
          const pdfImageWidth = pdfWidth;
          const pdfImageHeight = (imgProps.height * pdfImageWidth) / imgProps.width;

          pdf.addImage(imgData, 'PNG', 0, 0, pdfImageWidth, pdfImageHeight);

          pdf.save('sales-report.pdf');
        });
      }

      // Excel download

      function downloadExcel() {
        const tableRows = document.querySelectorAll('#salesReport tbody tr');

        if (tableRows.length === 0) {
          console.error("No rows found in the table.");
          return;
        }

        const data = Array.from(tableRows).map(row => {
          const cells = row.querySelectorAll('td');

          if (cells.length < 9) {
            console.error("Each row must have 9 cells.");
            return null;
          }

          return {
            orderId: cells[0].textContent.trim(),
            orderDate: cells[1].textContent.trim(),
            userName: cells[2].textContent.trim(),
            productName: cells[3].textContent.trim(),
            totalAmount: cells[4].textContent.trim().replace('â‚¹', ''),
            couponDiscount: cells[5].textContent.trim().replace('â‚¹', ''),
            offerDiscount: cells[6].textContent.trim().replace('â‚¹', ''),
            finalPrice: cells[7].textContent.trim().replace('â‚¹', ''),
            orderStatus: cells[8].textContent.trim()
          };
        }).filter(row => row !== null);

        console.log(data); // Log data to ensure it's correct

        fetch('/admin/downloadExcel', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({
              data: data
            }),
          })
          .then(response => response.blob())
          .then(blob => {
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.style.display = 'none';
            a.href = url;
            a.download = 'sales-report.xlsx';
            document.body.appendChild(a);
            a.click();
            window.URL.revokeObjectURL(url);
          })
          .catch(error => console.error('Error downloading Excel:', error));
      }

      function showTable(type) {
        document.getElementById('categoryTable').style.display = 'none';
        document.getElementById('productTable').style.display = 'none';
        document.getElementById('brandTable').style.display = 'none';

        if (type === 'category') {
          document.getElementById('categoryTable').style.display = '';
        } else if (type === 'product') {
          document.getElementById('productTable').style.display = '';
        } else if (type === 'brand') {
          document.getElementById('brandTable').style.display = '';
        }
      }
    </script>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
      // Data for best selling categories
      //let categoryData = <%- JSON.stringify(topCategories) %>;
      let categoryLabels = categoryData.map(item => item._id);
      let categoryCounts = categoryData.map(item => item.count);

      // Data for best selling products
      //let productData = <%- JSON.stringify(topProduct) %>;
      let productLabels = productData.map(item => item._id);
      let productCounts = productData.map(item => item.count);

      // Create chart for best selling categories
      let categoryChart = new Chart(document.getElementById('best-selling-categories'), {
        type: 'bar',
        data: {
          labels: categoryLabels,
          datasets: [{
            label: 'Sales Count',
            data: categoryCounts,
            backgroundColor: 'rgba(75, 192, 192, 0.6)',
            borderColor: 'rgba(75, 192, 192, 1)',
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });

      // Create chart for best selling products
      let productChart = new Chart(document.getElementById('best-selling-products'), {
        type: 'bar',
        data: {
          labels: productLabels,
          datasets: [{
            label: 'Sales Count',
            data: productCounts,
            backgroundColor: 'rgba(255, 99, 132, 0.6)',
            borderColor: 'rgba(255, 99, 132, 1)',
            borderWidth: 1
          }]
        },
        options: {
          responsive: true,
          scales: {
            y: {
              beginAtZero: true
            }
          }
        }
      });

      // Filter functionality
      document.querySelectorAll('.dropdown-item').forEach(item => {
        item.addEventListener('click', function(e) {
          e.preventDefault();
          const filter = this.getAttribute('data-filter');
          const chart = this.getAttribute('data-chart');
          console.log(`Filter: ${filter}, Chart: ${chart}`);
          updateChart(chart, filter);
        });
      });

      function updateChart(chartType, filter) {
        console.log(`Updating ${chartType} chart with ${filter} filter`);
        const scrollPosition = window.pageYOffset;
        console.log(`Scroll position before update: ${scrollPosition}`);

        fetch(`/admin/getFilteredChartData?chart=${chartType}&filter=${filter}`)
          .then(response => response.json())
          .then(data => {
            console.log(`Received data for ${chartType} chart:`, data);
            let chart;
            if (chartType === 'category') {
              chart = categoryChart;
            } else if (chartType === 'product') {
              chart = productChart;
            }

            chart.data.labels = data.labels;
            chart.data.datasets[0].data = data.counts;
            chart.update('none');

            console.log(`Scroll position after update: ${window.pageYOffset}`);
            if (window.pageYOffset !== scrollPosition) {
              console.log('Scroll position changed, resetting...');
              window.scrollTo(0, scrollPosition);
            }
          })
          .catch(error => {
            console.error('Error updating chart:', error);
          });
      }
    </script>


    <%- include('../layouts/adminLayout/footer.ejs')%>