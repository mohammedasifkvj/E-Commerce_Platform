<%- include("../adminPartials/header") %>
<section class="content-main">
    <div class="content-header">
        <div>
            <h2 class="content-title card-title">Order List</h2>
            <!-- <p>Lorem ipsum dolor sit amet.</p> -->
        </div>
        <div>
            <input type="text" placeholder="Search order ID" class="form-control bg-white" />
        </div>
    </div>
    <div class="card mb-4">
        <header class="card-header">
            <div class="row gx-3">
                <div class="col-lg-4 col-md-6 me-auto">
                    <input type="text" placeholder="Search..." class="form-control" />
                </div>
                <div class="col-lg-2 col-6 col-md-3">
                    <select class="form-select">
                        <option>Status</option>
                        <option>Active</option>
                        <option>Disabled</option>
                        <option>Show all</option>
                    </select>
                </div>
                <div class="col-lg-2 col-6 col-md-3">
                    <select class="form-select">
                        <option>Show 20</option>
                        <option>Show 30</option>
                        <option>Show 40</option>
                    </select>
                </div>
            </div>
        </header>
        <!-- card-header end// -->
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                      <tr>
                        <th scope="col">S.No</th>
                        <th scope="col">Customer Name</th>
                        <th scope="col">Email</th>
                        <th scope="col">Total</th>
                        <th scope="col">Status</th>
                        <th scope="col">Date</th>
                        <th scope="col" class="text-center">Actions</th>
                      </tr>
                    </thead>
                    <% let SNo = 1; %>
                    <tbody>
                      <% orders.forEach(order => { %>
                      <tr>
                        <td><b></b><%= SNo ++ %></td>
                        <td><b><%= order.userId.name %></b></td>
                        <td><%= order.userId.email %></td>
                        <td><%= order.orderTotal %></td>
                        <td><span class="badge rounded-pill alert-warning"><%= order?.status %></span></td>
                        <td><%= (new Date(order.createdAt)).toDateString() %></td>
                        <td class="text-end">
                          <a href="/admin/OrderDetails/<%= order._id %>" class="btn btn-md rounded font-sm">Detail</a>
                            <button type="button" onclick="deleteOrder('<%= order._id %>')" class="btn btn-md rounded text-danger">Delete</button>
                            <!-- Actions -->
                                <div class="dropdown" >
                                    <button class="btn btn-sm btn-outline-primary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                        Actions
                                    </button>
                                    <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                        <li><a class="dropdown-item change-status" href="#" data-order-id="<%= order._id %>" data-status="Order confirmed">Ordered</a></li>
                                        <li><a class="dropdown-item change-status" href="#" data-order-id="<%= order._id %>" data-status="Delivered">Delivered</a></li>
                                        <li><a class="dropdown-item change-status" href="#" data-order-id="<%= order._id %>" data-status="Completed">Completed</a></li>
                                        <% if (order.status === 'Requested for Return') { %>
                                            <li><a class="dropdown-item approve-return" href="#" data-order-id="<%= order._id %>">Approve</a></li>
                                        <% } %>
                                    </ul>
                                </div>
                        </td>
                      </tr>
                      <% }); %>
                    </tbody>
                  </table>
                  
            </div>
            <!-- table-responsive //end -->
        </div>
        <!-- card-body end// -->
    </div>
    <!-- card end// -->
    <div class="row ">
        <div class="col-12 ">
            <nav aria-label="Page navigation example ">
                <ul class="pagination justify-content-center">
                    <% if (currentPage > 1) { %>
                    <li class="page-item">
                        <a class="page-link" href="?page=<%= currentPage - 1 %>">Previous</a>
                    </li>
                    <% } %>
                    <% for (let i = 1; i <= totalPages; i++) { %>
                    <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                        <a class="page-link" href="?page=<%= i %>"><%= i %></a>
                    </li>
                    <% } %>
                    <% if (currentPage < totalPages) { %>
                    <li class="page-item">
                        <a class="page-link" href="?page=<%= currentPage + 1 %>">Next</a>
                    </li>
                    <% } %>
                </ul>
            </nav>
        </div>
    </div>
    <!-- <div class="pagination-area mt-30 mb-50">
        <nav aria-label="Page navigation example">
            <ul class="pagination justify-content-start">
                <li class="page-item">
                <a class="page-link" href="#"><i class="material-icons md-chevron_left"></i></a>
                <li class="page-item active"><a class="page-link" href="#">01</a></li>
                </li>
                <li class="page-item">
                    <a class="page-link" href="#"><i class="material-icons md-chevron_right"></i></a>
                </li>
            </ul>
        </nav>
    </div> -->
</section>  
<script>
    async function deleteOrder(orderId) {
    const result = await Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, Delete it!'
    });

    if (result.isConfirmed) {
        const response = await fetch('/admin/deleteOrder/', {
            method: "DELETE",
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({orderId})
        });

        const result = await response.json();
        if (response.status === 200) {
            // window.location.reload();
            //updateCartUI(result.cartItems);
           (() => {
            location.reload(); // Reload the page to update the cart -Given as IIFE
                })()
        } else {
            Swal.fire({
                icon: "error",
                title: "Error",
                text: result.error || "An error occurred",
                showConfirmButton: true
            });
        }
    }
}
</script> 
<script>
    document.addEventListener('DOMContentLoaded', function() {
        const orderStatusHeaders = document.querySelectorAll('.status');

        orderStatusHeaders.forEach(function(h5) {
            switch(h5.textContent.trim().toLowerCase()) {
                case 'cancelled':
                case 'returned':
                case 'requested for return':
                    h5.style.color = 'red';
                    break;
                case 'completed':
                    h5.style.color = 'green';
                    break;
                case 'order confirmed':
                    h5.style.color = 'blue';
                    break;
                default:
                    h5.style.color = 'black'; 
                    break;
            }
        });
    });

    $(document).ready(function() {
        // Handle the change status action
        $('.change-status').on('click', function(e) {
            e.preventDefault();
            const orderId = $(this).data('order-id');
            const status = $(this).data('status');
            $.ajax({
                url: '/admin/updateOrderStatus',  
                type: 'POST',
                data: {
                    orderId: orderId,
                    status: status
                },
                success: function(response) {
                    if(response.success) {
                        Swal.fire('Success', 'Order status updated successfully', 'success').then(() => {
                            location.reload();  // Reload the page to reflect changes
                        });
                    } else {
                        Swal.fire('Error', 'Failed to update order status', 'error');
                    }
                },
                error: function(error) {
                    //console.error('Error updating order status:', error);
                    Swal.fire('Error', 'Error updating order status', 'error');
                }
            });
        });

        // Handle the approve return action
        $('.approve-return').on('click', function(e) {
    e.preventDefault();
    const orderId = $(this).data('order-id');

    Swal.fire({
        title: 'Are you sure?',
        text: 'Do you want to approve this return?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, approve it!'
    }).then((result) => {
        if (result.isConfirmed) {
            fetch('/admin/approveReturn', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ orderId }) // Sending orderId in the request body
            })
            .then(response => response.json())
            .then(data => {
                if (data.message) {
                    Swal.fire('Approved!', 'Return request has been approved.', 'success').then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire('Error!', 'There was a problem approving the return.', 'error');
                }
            })
            .catch(error => {
                Swal.fire('Error!', 'There was a problem approving the return.', 'error');
            });
        }
    });
});
    });



// dropdown
document.addEventListener('DOMContentLoaded', function() {
        // Iterate over each order item
        document.querySelectorAll('.order-row').forEach(row => {
            const status = row.querySelector('.status').innerText.trim().toLowerCase();
            const dropdownItems = row.querySelectorAll('.dropdown-item');

            // Function to disable specific dropdown items
            const disableItems = (items) => {
                items.forEach(item => {
                    item.classList.add('disabled');
                    item.style.pointerEvents = 'none';
                    item.style.color = '#6c757d';
                });
            };

            switch (status) {
                case 'cancelled':
                case 'returned':
                case 'completed':
                case 'requested for return':
                    disableItems([dropdownItems[0], dropdownItems[1], dropdownItems[2]]);
                    break;
                case 'delivered':
                    disableItems([dropdownItems[0]]);
                    break;
                default:
                    break;
            }
        });
    });
</script>

           
<%- include("../adminPartials/footer") %><section class="content-main">
   
              